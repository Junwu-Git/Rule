name: Sync and Modify IP Lists

on:
  schedule:
    - cron: "0 23 * * *" # 7:00 AM UTC+8
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update-lists:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout your repository
        uses: actions/checkout@v3

      - name: Set current date (Beijing Time)
        run: echo "DATE=$(TZ='Asia/Shanghai' date '+%Y年%m月%d日 %H:%M:%S')" >> $GITHUB_ENV
        
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y git curl

      - name: Clone source repositories
        run: |
          git clone --branch meta https://github.com/MetaCubeX/meta-rules-dat.git --depth=1
          git clone --branch master https://github.com/blackmatrix7/ios_rule_script.git --depth=1
          git clone --branch main https://github.com/666OS/YYDS.git yyds-repo --depth=1

      - name: Prepare folders
        run: mkdir -p ActionRules ActionRules/copy meta/MetaCubeX/geoip meta/MetaCubeX/geosite meta/666OS meta/blackmatrix7

      - name: Initialize warning files
        run: |
          echo "同步警告记录：" > warning.md
          echo "" > new_warning.md

      - name: Copy geoip files from MetaCubeX (all matching extensions)
        run: |
          for base in private cn google netflix twitter telegram; do
            for ext in mrs list yaml; do
              src="meta-rules-dat/geo/geoip/${base}.${ext}"
              dst="meta/MetaCubeX/geoip/${base}.${ext}"
              if [[ -f "$src" ]]; then
                cp "$src" "$dst"
              else
                echo "${{ env.DATE }}，${base}.${ext}（geoip），未拷贝" >> warning.md
                echo "${base}.${ext}（geoip），未拷贝" >> new_warning.md
              fi
            done
          done

      - name: Copy geosite files from MetaCubeX (all matching extensions)
        run: |
          for base in category-public-tracker private connectivity-check cn openai category-ai-!cn github twitter youtube apple-cn apple cloudflare-cn google onedrive microsoft category-games telegram netflix bilibili bahamut spotify pixiv gfw geolocation-!cn; do
            for ext in mrs list yaml; do
              src="meta-rules-dat/geo/geosite/${base}.${ext}"
              dst="meta/MetaCubeX/geosite/${base}.${ext}"
              if [[ -f "$src" ]]; then
                cp "$src" "$dst"
              else
                echo "${{ env.DATE }}，${base}.${ext}（geosite），未拷贝" >> warning.md
                echo "${base}.${ext}（geosite），未拷贝" >> new_warning.md
              fi
            done
          done

      # - name: Copy YAML & list from 666OS/YYDS
      #   run: |
      #     for f in XPTV.yaml fix-direct.yaml download.yaml emby.list; do
      #       src="yyds-repo/mihomo/rules/$f"
      #       dst="meta/666OS/$f"
      #       if [[ -f "$src" ]]; then
      #         cp "$src" "$dst"
      #       else
      #         echo "${{ env.DATE }}，$f，未拷贝" >> warning.md
      #         echo "$f，未拷贝" >> new_warning.md
      #       fi
      #     done

      # - name: Convert YAML rules from 666OS/YYDS to list format
      #   run: |
      #     for f in XPTV fix-direct; do
      #       src="yyds-repo/mihomo/rules/${f}.yaml"
      #       dst="meta/666OS/${f}.list"
      #       if [[ -f "$src" ]]; then
      #         grep -vE '^(payload:|[[:space:]]*# PROCESS-NAME|[[:space:]]*- PROCESS-NAME|^$)' "$src" \
      #           | grep -v 'DST-PORT' \
      #           | sed -E 's/^[[:space:]]*-[[:space:]]*//' \
      #           | sed 's/^[[:space:]]*#/#/' > "$dst"
      #       else
      #         echo "${{ env.DATE }}，${f}.yaml，未拷贝" >> warning.md
      #         echo "${f}.yaml，未拷贝" >> new_warning.md
      #       fi
      #     done

      - name: Copy Game_No_Resolve.yaml from blackmatrix7
        run: |
          src="ios_rule_script/rule/Clash/Game/Game_No_Resolve.yaml"
          dst="meta/blackmatrix7/Game_No_Resolve.yaml"
          if [[ -f "$src" ]]; then
            cp "$src" "$dst"
          else
            echo "${{ env.DATE }}，Game_No_Resolve.yaml，未拷贝" >> warning.md
            echo "Game_No_Resolve.yaml，未拷贝" >> new_warning.md
          fi

      - name: Commit and push changes
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          git add ActionRules meta warning.md || true
          git commit -m "自动更新 ${{ env.DATE }}" || echo "No changes"
          git remote remove origin
          git remote add origin https://x-access-token:${GH_TOKEN}@github.com/${{ github.repository }}
          git push origin HEAD:${{ github.ref_name }}

      - name: Telegram Notify if new warnings exist
        if: always()
        run: |
          set -euo pipefail
          if [ -s new_warning.md ]; then
            content=$(grep -v '^[[:space:]]*$' new_warning.md || true)
            if [ -n "$content" ]; then
              text="⚠️ GitHub Action 同步警告：%0A$content"
              curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
                -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
                --data-urlencode "text=$text" || echo "Telegram 发送失败"
            else
              echo "new_warning.md 仅包含空行，跳过通知"
            fi
          else
            echo "new_warning.md 文件为空，跳过通知"
          fi
